/*
 * This file is generated by jOOQ.
 */
package com.otus.helm.tables.records;


import com.otus.helm.tables.Role;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record2<String, String[]> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.role.name</code>.
     */
    public RoleRecord setName(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.role.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.role.permissions</code>.
     */
    public RoleRecord setPermissions(String[] value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.role.permissions</code>.
     */
    public String[] getPermissions() {
        return (String[]) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String[]> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String[]> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Role.ROLE.NAME;
    }

    @Override
    public Field<String[]> field2() {
        return Role.ROLE.PERMISSIONS;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public String[] component2() {
        return getPermissions();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public String[] value2() {
        return getPermissions();
    }

    @Override
    public RoleRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public RoleRecord value2(String[] value) {
        setPermissions(value);
        return this;
    }

    @Override
    public RoleRecord values(String value1, String[] value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(String name, String[] permissions) {
        super(Role.ROLE);

        setName(name);
        setPermissions(permissions);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(com.otus.helm.tables.pojos.Role value) {
        super(Role.ROLE);

        if (value != null) {
            setName(value.getName());
            setPermissions(value.getPermissions());
        }
    }
}
